rownames(results) <- c("true", "density", "ash", "ks")
return(list(summary.dis, results))
}
set.seed(1107)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
test_est_fun <- function(smallvalue=0.000000001, mean_post = 0,
sd_post = 1,
mean_prior = 5,
sd_prior = 2, eplison.adj = 1/10, size = 10000, plot = F,...){
sd_like <- sqrt(1/(1/(sd_post)^2-1/(sd_prior)^2))
dweight_exact <- 1/sd_like^2*(sd_post)^2
mean_like <- (mean_post - (1-dweight_exact)*mean_prior)/dweight_exact
zstat<-(mean_like-mean_prior)/sqrt(sd_like^2 + sd_prior^2)
discr_exact<-2*pnorm(-abs(zstat))
summary.dis <-  data.frame(mean = c(mean_prior, mean_post, mean_like),
sd = c(sd_prior, sd_post, sd_like))
rownames(summary.dis) <- c("prior", "post", "likelihood")
post.s  <- rnorm(size, mean = mean_post, sd = sd_post )
prior.s<- rnorm(size, mean = mean_prior, sd = sd_prior)
from <- min(prior.s, post.s, na.rm = T)
to <- max(prior.s, post.s, na.rm = T)
dprior <- density(prior.s, from = from, to = to, na.rm = T)#, kernel = "optcosine", bw = "SJ")
dpost <- density(post.s, from = from, to = to, na.rm = T)#, kernel = "optcosine", bw = "SJ")
xat <- dprior$x
outlier <- dprior$y[xat <= range(prior.s)[1]  |   xat >= range(prior.s)[2]]
if(length(outlier) == 0){
eplison <- 0
} else{
eplison <- max(outlier)
}
prior <- (dprior$y + eplison.adj* eplison)/sum(dprior$y + eplison.adj* eplison)
post <- dpost$y/sum(dpost$y)
sd0hat <- sd(prior.s)
like <- post/prior
exact <- dnorm(xat, mean = mean_like, sd = sd_like)
exact <-exact/sum(exact)
like<- like/sum(like)
like[like==0] <- smallvalue
prior <- prior/sum(prior)
kl <- -sum(like[like>0]*log(prior[like>0]/like[like>0]))
discrkl <- kl
if(plot){
plot(xat, like, type="l", col=3, ylim = c(0, max(c(exact, like, prior, post))), lty =5, xlab = "", ylab = "", xaxt="n")
axis(1, at =round(xat[seq(from = 1, to = length(xat), length.out = 10)],2), labels = T)
lines(xat, prior, col=2)
lines(xat, post,  col=1)
#    lines(xat, like.ash, lty = 4, col = "blue")
#    lines(xat, like.ks,lty = 3, col = "orange")
lines(xat, exact, lty = 2, col= "purple")
legend("topright", col=c("black","red","green","purple"), legend=c("Posterior", "Prior",
"Kernal Density","True Likehood")
,cex = 0.5, box.col = "white",lty = c(5,1,4,3,2))
}
discr<-bivariate_test_measure(dprior$x, prior, like)
discr.ash<-bivariate_test_measure(dprior.ash$x, prior.ash, like.ash)
discr.ks<-bivariate_test_measure(dprior.ks$x, prior.ks, like.ks)
ys <- sample(dprior$x, size = 10000, replace = T, prob = like)
sdyhat <- sd(ys)
dweight <- 1/sdyhat^2*1/(1/sdyhat^2 + 1/sd0hat^2)
ys_ash <- sample(dprior.ash$x, size = 10000, replace = T, prob = like.ash)
dweight_ash <- 1/sd(ys_ash)^2*1/(1/sd(ys_ash)^2 + 1/sd0hat^2)
ys_ks <- sample(dprior.ks$x, size = 10000, replace = T, prob = abs(like.ks))
dweight_ks <- 1/sd(ys_ks)^2*1/(1/sd(ys_ks)^2 + 1/sd0hat^2)
results <-data.frame(c(dweight_exact, dweight,dweight_ash, dweight_ks),
c(discr_exact,   discr,  discr.ash, discr.ks))
colnames (results) <- c("data weight", "accordance")
rownames(results) <- c("true", "density", "ash", "ks")
return(list(summary.dis, results))
}
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 2, sd_prior = 1, plot = T)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
require(ash)
require(KernSmooth)
require(ggplot2)
require( kableExtra)
source(file="~/Documents/2018 Fall/RA/dataweight-master/data_wt_functions.R")
source(file="~/Documents/2018 Fall/RA/dataweight-master/getweightS.R")
require(gridExtra)
test_est_fun <- function(smallvalue=0.000000001, mean_post = 0,
sd_post = 1,
mean_prior = 5,
sd_prior = 2, eplison.adj = 1/10, size = 10000, plot = F,...){
sd_like <- sqrt(1/(1/(sd_post)^2-1/(sd_prior)^2))
dweight_exact <- 1/sd_like^2*(sd_post)^2
mean_like <- (mean_post - (1-dweight_exact)*mean_prior)/dweight_exact
zstat<-(mean_like-mean_prior)/sqrt(sd_like^2 + sd_prior^2)
discr_exact<-2*pnorm(-abs(zstat))
summary.dis <-  data.frame(mean = c(mean_prior, mean_post, mean_like),
sd = c(sd_prior, sd_post, sd_like))
rownames(summary.dis) <- c("prior", "post", "likelihood")
post.s  <- rnorm(size, mean = mean_post, sd = sd_post )
prior.s<- rnorm(size, mean = mean_prior, sd = sd_prior)
from <- min(prior.s, post.s, na.rm = T)
to <- max(prior.s, post.s, na.rm = T)
dprior <- density(prior.s, from = from, to = to, na.rm = T)#, kernel = "optcosine", bw = "SJ")
dpost <- density(post.s, from = from, to = to, na.rm = T)#, kernel = "optcosine", bw = "SJ")
xat <- dprior$x
outlier <- dprior$y[xat <= range(prior.s)[1]  |   xat >= range(prior.s)[2]]
if(length(outlier) == 0){
eplison <- 0
} else{
eplison <- max(outlier)
}
prior <- (dprior$y + eplison.adj* eplison)/sum(dprior$y + eplison.adj* eplison)
post <- dpost$y/sum(dpost$y)
sd0hat <- sd(prior.s)
like <- post/prior
exact <- dnorm(xat, mean = mean_like, sd = sd_like)
exact <-exact/sum(exact)
like<- like/sum(like)
like[like==0] <- smallvalue
prior <- prior/sum(prior)
kl <- -sum(like[like>0]*log(prior[like>0]/like[like>0]))
discrkl <- kl
if(plot){
plot(xat, like, type="l", col=3, ylim = c(0, max(c(exact, like, prior, post))), lty =5, xlab = "", ylab = "", xaxt="n")
axis(1, at =round(xat[seq(from = 1, to = length(xat), length.out = 10)],2), labels = T)
lines(xat, prior, col=2)
lines(xat, post,  col=1)
#    lines(xat, like.ash, lty = 4, col = "blue")
#    lines(xat, like.ks,lty = 3, col = "orange")
lines(xat, exact, lty = 2, col= "purple")
legend("topright", col=c("black","red","green","purple"), legend=c("Posterior", "Prior",
"Kernal Density","True Likehood")
,cex = 0.5, box.col = "white",lty = c(5,1,4,3,2))
}
discr<-bivariate_test_measure(dprior$x, prior, like)
ys <- sample(dprior$x, size = 10000, replace = T, prob = like)
sdyhat <- sd(ys)
dweight <- 1/sdyhat^2*1/(1/sdyhat^2 + 1/sd0hat^2)
results <-data.frame(c(dweight_exact, dweight),
c(discr_exact,   discr))
colnames (results) <- c("data weight", "accordance")
rownames(results) <- c("true", "density")
return(list(summary.dis, results))
}
set.seed(1107)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
kable(compare1)
set.seed(1107)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
kable(compare1)
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 2, sd_prior = 1, plot = T)
kable(compare2)
kable(compare1[[2]] )
kable(round(compare1[[2]],3) )
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
set.seed(1107)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
kable(round(compare1[[2]],3) )
knitr::opts_chunk$set(echo = TRUE)
library(readr)
require(ash)
require(KernSmooth)
require(ggplot2)
require( kableExtra)
source(file="~/Documents/2018 Fall/RA/dataweight-master/data_wt_functions.R")
source(file="~/Documents/2018 Fall/RA/dataweight-master/getweightS.R")
require(gridExtra)
test_est_fun <- function(smallvalue=0.000000001, mean_post = 0,
sd_post = 1,
mean_prior = 5,
sd_prior = 2, eplison.adj = 1/10, size = 10000, plot = F,...){
sd_like <- sqrt(1/(1/(sd_post)^2-1/(sd_prior)^2))
dweight_exact <- 1/sd_like^2*(sd_post)^2
mean_like <- (mean_post - (1-dweight_exact)*mean_prior)/dweight_exact
zstat<-(mean_like-mean_prior)/sqrt(sd_like^2 + sd_prior^2)
discr_exact<-2*pnorm(-abs(zstat))
summary.dis <-  data.frame(mean = c(mean_prior, mean_post, mean_like),
sd = c(sd_prior, sd_post, sd_like))
rownames(summary.dis) <- c("prior", "post", "likelihood")
post.s  <- rnorm(size, mean = mean_post, sd = sd_post )
prior.s<- rnorm(size, mean = mean_prior, sd = sd_prior)
from <- min(prior.s, post.s, na.rm = T)
to <- max(prior.s, post.s, na.rm = T)
dprior <- density(prior.s, from = from, to = to, na.rm = T)#, kernel = "optcosine", bw = "SJ")
dpost <- density(post.s, from = from, to = to, na.rm = T)#, kernel = "optcosine", bw = "SJ")
xat <- dprior$x
outlier <- dprior$y[xat <= range(prior.s)[1]  |   xat >= range(prior.s)[2]]
if(length(outlier) == 0){
eplison <- 0
} else{
eplison <- max(outlier)
}
prior <- (dprior$y + eplison.adj* eplison)/sum(dprior$y + eplison.adj* eplison)
post <- dpost$y/sum(dpost$y)
sd0hat <- sd(prior.s)
like <- post/prior
exact <- dnorm(xat, mean = mean_like, sd = sd_like)
exact <-exact/sum(exact)
like<- like/sum(like)
like[like==0] <- smallvalue
prior <- prior/sum(prior)
kl <- -sum(like[like>0]*log(prior[like>0]/like[like>0]))
discrkl <- kl
if(plot){
plot(xat, like, type="l", col=3, ylim = c(0, max(c(exact, like, prior, post))), lty =5, xlab = "", ylab = "", xaxt="n")
axis(1, at =round(xat[seq(from = 1, to = length(xat), length.out = 10)],2), labels = T)
lines(xat, prior, col=2)
lines(xat, post,  col=1)
#    lines(xat, like.ash, lty = 4, col = "blue")
#    lines(xat, like.ks,lty = 3, col = "orange")
lines(xat, exact, lty = 2, col= "purple")
legend("topright", col=c("black","red","green","purple"), legend=c("Posterior", "Prior",
"Kernal Density","True Likehood")
,cex = 0.5, box.col = "white",lty = c(5,1,4,3,2))
}
discr<-bivariate_test_measure(dprior$x, prior, like)
ys <- sample(dprior$x, size = 10000, replace = T, prob = like)
sdyhat <- sd(ys)
dweight <- 1/sdyhat^2*1/(1/sdyhat^2 + 1/sd0hat^2)
results <-data.frame(c(dweight_exact, dweight),
c(discr_exact,   discr))
colnames (results) <- c("data weight", "accordance")
rownames(results) <- c("true", "density")
return(list(summary.dis, results))
}
set.seed(1107)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
kable(round(compare1[[2]],3) )
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1/2.8, plot = T)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1/2.8, plot = T)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1/(2.5), plot = T)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1, plot = T)
kable(round(compare1[[2]],3) )
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1, plot = T)
kable(round(compare2[[2]],3) )
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 2, sd_prior = 1, plot = T)
kable(round(compare2[[2]],3) )
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 2, sd_prior = 2, plot = T)
kable(round(compare2[[2]],3) )
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 2, plot = T)
kable(round(compare2[[2]],3) )
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 2, plot = T)
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1.5, plot = T)
kable(round(compare2[[2]],3) )
kable(round(compare2,3) )
knitr::opts_chunk$set(echo = TRUE)
library(readr)
require(ash)
require(KernSmooth)
require(ggplot2)
require( kableExtra)
source(file="~/Documents/2018 Fall/RA/dataweight-master/data_wt_functions.R")
source(file="~/Documents/2018 Fall/RA/dataweight-master/getweightS.R")
require(gridExtra)
test_est_fun <- function(smallvalue=0.000000001, mean_post = 0,
sd_post = 1,
mean_prior = 5,
sd_prior = 2, eplison.adj = 1/10, size = 10000, plot = F,...){
sd_like <- sqrt(1/(1/(sd_post)^2-1/(sd_prior)^2))
dweight_exact <- 1/sd_like^2*(sd_post)^2
mean_like <- (mean_post - (1-dweight_exact)*mean_prior)/dweight_exact
zstat<-(mean_like-mean_prior)/sqrt(sd_like^2 + sd_prior^2)
discr_exact<-2*pnorm(-abs(zstat))
summary.dis <-  data.frame(mean = c(mean_prior, mean_post, mean_like),
sd = c(sd_prior, sd_post, sd_like))
rownames(summary.dis) <- c("prior", "post", "likelihood")
post.s  <- rnorm(size, mean = mean_post, sd = sd_post )
prior.s<- rnorm(size, mean = mean_prior, sd = sd_prior)
from <- min(prior.s, post.s, na.rm = T)
to <- max(prior.s, post.s, na.rm = T)
dprior <- density(prior.s, from = from, to = to, na.rm = T)#, kernel = "optcosine", bw = "SJ")
dpost <- density(post.s, from = from, to = to, na.rm = T)#, kernel = "optcosine", bw = "SJ")
xat <- dprior$x
outlier <- dprior$y[xat <= range(prior.s)[1]  |   xat >= range(prior.s)[2]]
if(length(outlier) == 0){
eplison <- 0
} else{
eplison <- max(outlier)
}
prior <- (dprior$y + eplison.adj* eplison)/sum(dprior$y + eplison.adj* eplison)
post <- dpost$y/sum(dpost$y)
sd0hat <- sd(prior.s)
like <- post/prior
exact <- dnorm(xat, mean = mean_like, sd = sd_like)
exact <-exact/sum(exact)
like<- like/sum(like)
like[like==0] <- smallvalue
prior <- prior/sum(prior)
kl <- -sum(like[like>0]*log(prior[like>0]/like[like>0]))
discrkl <- kl
if(plot){
plot(xat, like, type="l", col=3, ylim = c(0, max(c(exact, like, prior, post))), lty =5, xlab = "", ylab = "", xaxt="n")
axis(1, at =round(xat[seq(from = 1, to = length(xat), length.out = 10)],2), labels = T)
lines(xat, prior, col=2)
lines(xat, post,  col=1)
#    lines(xat, like.ash, lty = 4, col = "blue")
#    lines(xat, like.ks,lty = 3, col = "orange")
lines(xat, exact, lty = 2, col= "purple")
legend("topright", col=c("black","red","green","purple"), legend=c("Posterior", "Prior",
"Kernal Density","True Likehood")
,cex = 0.5, box.col = "white",lty = c(5,1,4,3,2))
}
discr<-bivariate_test_measure(dprior$x, prior, like)
ys <- sample(dprior$x, size = 10000, replace = T, prob = like)
sdyhat <- sd(ys)
dweight <- 1/sdyhat^2*1/(1/sdyhat^2 + 1/sd0hat^2)
results <-data.frame(c(dweight_exact, dweight),
c(discr_exact,   discr))
colnames (results) <- c("data weight", "accordance")
rownames(results) <- c("true", "density")
return(list(round(summary.dis,3), round(results,3)))
}
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
kable(compare1 )
set.seed(1107)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
kable(compare1 )
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1.5, plot = T)
kable(compare2 )
compare3 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1, plot = T)
kable(compare3)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1/1.5, plot = T)
compare3 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1, plot = T)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1/1.5, plot = T)
kable(compare0 )
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
kable(compare1 )
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1.5, plot = T)
kable(compare2 )
compare3 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1, plot = T)
kable(compare3)
kable(compare0, format = "latex", booktabs = TRUE ,position = "float_right")
kable(compare0[[1]], format = "latex", booktabs = TRUE )%>%
kable_styling(position = "float_right")
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1/1.5, plot = T)
title(main = "plot a")
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1/1.5, plot = T)
title(main = "example 1")
kable(compare0, format = "latex", booktabs = TRUE, caption = "example 1" )%>%
kable_styling(position = "float_right")
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1, plot = T)
title(main = "example 2")
kable(compare1,  format = "latex", booktabs = TRUE)%>%
kable_styling(position = "float_right")
compare2 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 1.5, plot = T)
title(main = "example 3")
kable(compare2, format = "latex", booktabs = TRUE)%>%
kable_styling(position = "float_right")
compare3 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 1, plot = T)
title(main = "example 4")
kable(compare3,  format = "latex", booktabs = TRUE)%>%
kable_styling(position = "float_right")
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 1.2, sd_prior = 1/1.5, plot = T)
title(main = "example 1")
kable(compare0, format = "latex", booktabs = TRUE)
compare0
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 1.2, sd_prior = 2, plot = T)
title(main = "example 1")
kable(compare0, format = "latex", booktabs = TRUE)
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 1.2, sd_prior = 2, plot = T)
kable(compare0)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 5, plot = T)
title(main = "example 2")
kable(compare1,  format = "latex", booktabs = TRUE)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 3, sd_prior = 5, plot = T)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 5, plot = T)
title(main = "example 2")
kable(compare1,  format = "latex", booktabs = TRUE)
compare1
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 10, plot = T)
title(main = "example 2")
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 10, plot = T)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 10, sd_prior = 2, plot = T)
title(main = "example 2")
kable(compare1,  format = "latex", booktabs = TRUE)
compare1
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 10, sd_prior = 2, plot = T)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 20, sd_prior = 10, plot = T)
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 20, sd_prior = 5, plot = T)
title(main = "example 2")
kable(compare1,  format = "latex", booktabs = TRUE)
compare1,
compare1
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 10, sd_prior = 5, plot = T)
title(main = "example 2")
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 10, sd_prior = 5, plot = T)
compare1
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 10, sd_prior = 10, plot = T)
kable(compare1,  format = "latex", booktabs = TRUE)
compare1
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 10, sd_prior = 20, plot = T)
kable(compare1,  format = "latex", booktabs = TRUE)
compare1
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 10, sd_prior = 30, plot = T)
kable(compare1,  format = "latex", booktabs = TRUE)
compare1
compare1 <- test_est_fun(mean_post = 1,sd_post = 1/2,mean_prior = 5, sd_prior = 10, plot = T)
compare1
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/2, plot = T)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/5, plot = T)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/2.2, plot = T)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/1.8, plot = T)
title(main = "example 1")
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/1.9, plot = T)
title(main = "example 1")
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/1.9, plot = T)
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/1.8, plot = T)
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.1, sd_prior = 1/1.8, plot = T)
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.1, sd_prior = 1/1.8, plot = T)
1/1.7
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.7, plot = T)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/1.9, plot = T)
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.9, plot = T)
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.9, plot = T)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.95, plot = T)
title(main = "example 1")
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.9, plot = T)
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.85, plot = T)
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
1/1.9
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.95, plot = T)
title(main = "example 1")
kable(compare0)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.99, plot = T)
title(main = "example 1")
compare0
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.05, sd_prior = 1/1.95, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 3, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 2, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.5, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.5, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 3, sd_prior = 1/1.8, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 2, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 2, sd_prior = 1/1.9, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.5, sd_prior = 1/1.9, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/1.9, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.2, sd_prior = 1/1.8, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.3, sd_prior = 1/1.8, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.3, sd_prior = 1/1.9, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.3, sd_prior = 1/1.95, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.5, sd_prior = 1/1.8, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.3, sd_prior = 1/1.8, plot = T)
title(main = "example 1")
kable(compare0)
set.seed(1107)
compare0 <- test_est_fun(mean_post = 1,sd_post = 1/2, mean_prior = 1.3, sd_prior = 1/1.7, plot = T)
title(main = "example 1")
kable(compare0)
